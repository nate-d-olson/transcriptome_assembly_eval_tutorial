```{r setup, warning=FALSE, message=FALSE, echo = FALSE}
library(knitr)
library(readr)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
library(ggplot2)
```

```{r source_dir, warning=FALSE, message=FALSE, echo = FALSE}
results_read <- list(
      no_mods = "data/no_mods/Trinity_sequences.Trinity.fixed/",
      corrected = "data/corrected/Assembly4_Corrected.Trinity.fixed/",
      trimmed = "data/trimmed/Assembly2_Trimmed.Trinity.fixed/",
      trimmedcorrected = "data/trimmedcorrected/Assembly3_TrimmedCorrected.Trinity.fixed/"
)
```

Transcriptome Assembly and Evaluation Tutorial
========================================================
author: Nate Olson and Leann Biancani
date: 5/11/2016
autosize: true

Introduction
========================================================

__Transcriptomics__
- Study of the complete set of RNA transcripts in a sample
- RNA-seq methods utilize short-read sequencing technologies
- To characterize the transcripts, reads must be assembled

__*De novo* Transcriptome Assembly__
- Study transcriptomes without a reference genome
- Variable: many different methods & variety of parameters for each method  
      - Which are best?

__Assembly Evaluation__
- Reference vs. Read based methods

Tutorial Overview
========================================================
__Dataset__
- Raw RNAseq reads from *C. elegans*
- Read Trimming: TrimGalore 4.0
- Error Correction: BayesHammer (SPAdes 3.5)

__Assembly__
- *De novo* Assembly: Trinity 2.0.6

__Evaluation__
- read & reference based: TransRate
      
Dataset
========================================================
Data used to generate assemblies

__No Modifications__
- Raw RNAseq reads from *C. elegans*
- garbage in, garbage out?

__Trimmed Reads__
- Read Trimming with TrimGalore 4.0
- 

__Corrected Reads__
- Error Correction with BayesHammer (SPAdes 3.5)
- 

__Trimmed & Corrected Reads__
- TrimGalore & BayesHammer

Assembly Methods
========================================================
- Assembly
      - de bruin graph-based assembly: Trinity
      - datasets...

Assembly Results
========================================================
```{r echo=FALSE, message=FALSE, warning=FALSE}
assembly_metrics_df <- list(no_mods = "data/no_mods/", 
                            corrected = "data/corrected/",
                            trimmed = "data/trimmed/", 
                            trimmedcorrected = "data/trimmedcorrected/") %>% 
      map(paste0, "assemblies.csv") %>%  
      map_df(read_csv, .id = "read_set") %>% 
      select(-assembly) %>% 
      gather("metric","value", -read_set) %>% 
      mutate(read_set = factor(read_set, levels = c("no_mods","corrected","trimmed","trimmedcorrected")))
```

__Assembly Summary__
```{r echo=FALSE, message=FALSE, warning=FALSE}
assembly_metrics_df %>% 
      filter(metric %in% c("n_seqs", "smallest", "largest", 
                           "n50", "n_with_orf")) %>%
      spread(metric, value) %>% 
      select(read_set, n_seqs, smallest, largest, n50, n_with_orf) %>% 
      rename(Dataset = read_set, Contigs=n_seqs, Min=smallest,
              Max=largest, N50=n50,`N ORF`=n_with_orf) %>% 
      kable(digits = 2,
            caption = "Trinity _C. elegans_ transcriptome assembly summary metrics.")
```

***
__Metrics__
* Contigs - number of contigs in the assembly  
* Min & Max - size of the shortest and longest contig (bp)  
* N50 - size of largest contig where > 50% of bases are in contigs > this length.
* N ORF - number of contigs with a open reading frame 




Evaluation Method Transrate
========================================================

__Read based method:__ 
* Map read and calculate score
* Contig Score 
      1. Correct base (edit distance)
      2. Correct transcript (coverage)
      3. Probability chimera
      4. Probability complete - read pairing

****
__Reference based method:__

* Align contigs to reference transcriptome - BLAST   
* Reciprical Best Hit  
* Evaluate reference coverage  



Evaluation - Assembly Score
========================================================

__Transrate Score Summary__
```{r echo=FALSE, message=FALSE, warning=FALSE}
assembly_metrics_df %>% 
      filter(metric %in% c("score", "optimal_score", "cutoff", "weighted")) %>%
      spread(metric, value) %>% select(read_set, score, optimal_score, cutoff, weighted) %>% 
      rename(Dataset=read_set, Score=score, Optimal=optimal_score, Cutoff=cutoff, Weighted=weighted) %>% 
      kable(digits = 3,
            caption = "Trinity _C. elegans_ transcriptome Transrate score summary.")
```
****

__Metrics__

* Score - assembly score including all contigs  
* Optimial - optimized assembly score  
* Cutoff - contig score threshold for optimal score  
* Weighted - assembly score weighted by expression level



Evaluation - Assembly Score Optimization
========================================================
```{r, message=FALSE, warning=FALSE, echo=FALSE}
assembly_score_opt <- results_read %>% map(paste0,"assembly_score_optimisation.csv") %>% 
      map_df(read_csv, .id = "read_set") %>% 
      mutate(read_set = factor(read_set, levels = c("no_mods","corrected","trimmed","trimmedcorrected")))
```


```{r fig.cap = "Relationship between the cutoff for contig score and assembly score.", echo=FALSE, warning=FALSE, mesage=FALSE, fig.width = 12}
assembly_score_opt %>% 
      ggplot() + geom_path(aes(x = cutoff, y = assembly_score, color = read_set)) +
            theme_bw() +
            labs(x = "Contig Score Threshold", y = "Assembly Score", color = "Dataset")
```

For all datases the assembly score increases with increasing contig score threshold, 
then drops sharply due to filtering large proportion of contigs.  


Evaluation - Contig Metrics
========================================================


```{r echo=FALSE, warning=FALSE, message=FALSE}
contig_stat <- results_read %>% map(paste0,"contigs.csv") %>% 
      map_df(read_csv, .id = "read_set")

contig_cutoff <- assembly_metrics_df %>% filter(metric == "cutoff") %>% 
      select(-metric) %>% rename(cutoff = value)
contig_stat <- contig_stat %>% left_join(contig_cutoff) %>% 
      mutate(contig_filt = cutoff < score)
```

```{r echo=FALSE, message=FALSE, warning=FALSE, fig.cap="Contig score distribution by dataset.", fig.width = 12}
contig_stat %>% 
      ggplot() + geom_density(aes(x = score, color = read_set, fill = read_set), 
                              alpha = 0.25) + theme_bw() +
            labs(x = "Contig Score", y = "Density", color = "Dataset", fill = "Dataset")
```

Trimming reads resulted in a higher proportion of contigs with scores greater than 0.25 compared to assemblies using unmodified reads or only error corrected reads.  

Evaluation - Reference
========================================================
```{r source_ref_dir, warning=FALSE, message=FALSE, echo = FALSE}
results_ref <- list(
      no_mods = "data/no_mods_ref/Trinity_sequences.Trinity.fixed/",
      corrected = "data/corrected_ref/Assembly4_Corrected.Trinity.fixed/",
      trimmed = "data/trimmed_ref/Assembly2_Trimmed.Trinity.fixed/",
      trimmedcorrected = "data/trimmedcorrected_ref/Assembly3_TrimmedCorrected.Trinity.fixed/"
)
```

```{r, message=FALSE, warning=FALSE, echo=FALSE}
ref_contig <- results_ref %>% map(paste0,"contigs.csv") %>% 
      map_df(read_csv, .id = "read_set")
crb_contig <- ref_contig %>% filter(has_crb == "true")
contig_crb_score <- crb_contig %>% left_join(contig_stat)
```


```{r, message=FALSE, warning=FALSE, echo=FALSE, fig.cap = "Relationship between reference and read based quality assessment.", fig.width = 12}
ggplot(contig_crb_score) + 
      geom_density2d(aes(x = reference_coverage, y = score), color = "darkblue") +
      geom_smooth(aes(x = reference_coverage, y = score), color = "darkorange") +
      facet_grid(contig_filt~read_set) +
      theme_bw() + labs(x = "Reference Transcript Coverage", y = "Contig Score")
```

Contig score is a poor predictor of reference transcript coverage.  

Conclusions
=======================================================
- Read trimming has a greater impact on assembly size and number of contigs than error correction.  
- Read based assembly evaluation - potentially biased by the use of un-modified reads  
- No clear relationship between contig score and reference coverage